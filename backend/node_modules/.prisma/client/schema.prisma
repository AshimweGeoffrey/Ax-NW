// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  // PK is name per SQL schema
  name          String  @id @db.VarChar(32)
  id            String  @db.VarChar(50)
  password      String? @unique @db.VarChar(256)
  accessControl String? @map("access_control") @db.VarChar(32)
  email         String  @unique @db.VarChar(32)

  // Relations
  salesWeekly   SaleWeekly[]
  outgoingStock OutgoingStock[]

  @@map("user")
}

model Branch {
  // PK is branch_name per SQL schema
  name String @id @map("branch_name") @db.VarChar(16)
  id   String @db.VarChar(50)

  // Relations
  outgoingStock OutgoingStock[]

  @@map("branch")
}

model Category {
  // PK is name per SQL schema
  name       String  @id @db.VarChar(32)
  id         String  @db.VarChar(50)
  percentage String? @db.VarChar(12)

  // Relations
  inventory     Inventory[]
  outgoingStock OutgoingStock[]

  @@map("category")
}

model Inventory {
  // PK is name per SQL schema
  name              String    @id @db.VarChar(64)
  id                String    @db.VarChar(50)
  categoryName      String    @map("category_name") @db.VarChar(32)
  inventoryQuantity Int       @default(0) @map("inventory_quantity")
  incomingTimeStamp DateTime? @map("incoming_time_stamp")

  // Relations
  category      Category        @relation(fields: [categoryName], references: [name])
  salesWeekly   SaleWeekly[]
  outgoingStock OutgoingStock[]

  @@map("inventory")
}

model PaymentMethod {
  // PK is name per SQL schema
  name        String  @id @db.VarChar(50)
  paymentId   String? @map("payment_id") @db.VarChar(50)
  totalWeekly Int     @default(0) @map("total_weekly")

  // Relations
  salesWeekly SaleWeekly[]

  @@map("payment_method")
}

model SaleWeekly {
  id            String    @id @db.VarChar(50)
  itemName      String?   @map("item_name") @db.VarChar(64)
  category      String?   @db.VarChar(32)
  quantity      Int       @default(1)
  price         Int       @default(0)
  userName      String?   @map("user_name") @db.VarChar(32)
  timeStamp     DateTime? @map("time_stamp")
  paymentMethod String?   @map("payment_method") @db.VarChar(50)

  // Relations (only to unique keys)
  user    User?          @relation(fields: [userName], references: [name])
  item    Inventory?     @relation(fields: [itemName], references: [name])
  payment PaymentMethod? @relation(fields: [paymentMethod], references: [name])

  @@map("sale_weekly")
}

model OutgoingStock {
  id           String    @id @db.VarChar(50)
  itemName     String    @map("item_name") @db.VarChar(64)
  categoryName String    @map("category_name") @db.VarChar(32)
  userName     String?   @map("user_name") @db.VarChar(32)
  branchName   String?   @map("branch_name") @db.VarChar(16)
  quantity     Int
  timeStamp    DateTime? @default(now()) @map("time_stamp")

  // Relations (to unique keys)
  item     Inventory @relation(fields: [itemName], references: [name])
  category Category  @relation(fields: [categoryName], references: [name])
  user     User?     @relation(fields: [userName], references: [name])
  branch   Branch?   @relation(fields: [branchName], references: [name])

  @@map("outgoing_stock")
}

model Remark {
  id        String   @id @db.VarChar(50)
  timeStamp DateTime @map("time_stamp")
  message   String   @db.VarChar(1000)

  @@map("remark")
}
